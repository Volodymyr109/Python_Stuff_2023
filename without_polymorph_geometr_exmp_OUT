
class Rechangle:

    def __init__(self, a, b):
        self.a = a
        self.b = b

    def get_rect_area(self):
        return self.a * self.b


class Square:

    def __init__(self, a):
        self.a = a

    def get_sq_area(self):
        return self.a ** 2


class Circle:

    def __init__(self, r):
        self.r = r

    def get_cir_area(self):
        return 3.14 * self.r**2

#Out
from polymorph_geometr_exmp import Rechangle, Square, Circle

rect1 = Rechangle(3, 5)
rect2 = Rechangle(1, 6)

print(rect1.get_rect_area(),
      rect2.get_rect_area())

sq1 = Square(5)
print(sq1.get_sq_area())

cir1 = Circle(3)
cir2 = Circle(6)

print(cir1.get_cir_area(), cir2.get_cir_area())

figures = [rect1, rect2, sq1]
for figure in figures:
      if isinstance(figure, Square):
            print(figure.get_sq_area())
      elif isinstance(figure, Circle):
            print(figure.get_cir_area())
      else:
            print(figure.get_rect_area())
